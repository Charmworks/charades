module scheduler {
  extern module ross;

  include "typedefs.h";

  readonly CProxy_Scheduler scheduler;

  group Scheduler {
    entry [notrace] Scheduler();
    entry [notrace] void initialize_rand();
    entry [notrace,reductiontarget] void end_simulation(CkReductionMsg*);
    entry [notrace] void execute();
  };

  group SequentialScheduler : Scheduler {
    entry [notrace] SequentialScheduler();
  };

  group ConservativeScheduler : Scheduler {
    entry [notrace] ConservativeScheduler();
  };

  group OptimisticScheduler : Scheduler {
    entry [notrace] OptimisticScheduler();
  };

  initnode registerStatsReduction(void);
}
