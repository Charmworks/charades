module pe {
  extern module ross_core;

  include "typedefs.h";

  readonly CProxy_PE pes;

  group PE {
    entry PE(CProxy_Initialize); /**< constructor called from the mainchare */
    entry void initialize_rand(CProxy_Initialize);
    entry [reductiontarget] void end_simulation(CkReductionMsg *);

    // GVT methods
    entry void gvt_begin(); /**< begin gvt computation */
    entry void gvt_contribute(); /**< contribute to gvt reduction */
    entry [reductiontarget] void gvt_end(Time); /**< end of gvt computation */

    // Scheduler methods
    entry void execute_seq(); /**< execute until the end of simulation */
    entry void execute_cons(); /**< move to the end of this epoch */
    entry void execute_opt(); /**< move one step further optimistically */
  };

  initnode registerStatsReduction(void);
}
