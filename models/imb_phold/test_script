#!/bin/bash

rm tests/output

files=tests/*

if [ -n "$1" ]
then
  files=$1
fi

for file in $files
do
  echo "Running tests in $file"
  echo ""
  while read command
  do
    # When we hit the line for Net Events Processed we've finished this file
    if [[ "$command" == Net* ]]
    then
      break
    fi

    # Skip comments
    if [[ "$command" == \#* ]]
    then
      continue
    fi

    # Run the command, putting its output into 'output'
    echo -e "\tRunning command: $command $TEST_OPTS"
    $($command $TEST_OPTS > tests/output </dev/null)

    # Grep for the various outputs
    expected=$(grep "Net Events Processed" $file)
    actual=$(grep "Net Events Processed" tests/output)
    gvts=$(grep "Total GVT Computations" tests/output)

    # Trim all leading whitespace and squash intermediate whitespace
    expected=$(echo $expected | sed -e 's/^[[:space:]]*//' | tr -s [:space:])
    actual=$(echo $actual | sed -e 's/^[[:space:]]*//' | tr -s [:space:])
    gvts=$(echo $gvts | sed -e 's/^[[:space:]]*//' | tr -s [:space:])

    # Print out the net events expected and observed, as well as number of gvts
    echo -e "\t$gvts"
    echo -e "\tExpected: $expected"
    echo -e "\tActual: $actual"
    echo ""

    # Check if the test failed or not
    if [ "$expected" != "$actual" ]
    then
      echo "Test Failed"
      echo "See tests/output for the program output..."
      exit 1
    fi
  done < "$file"
done
echo "All Tests Passed!"
rm tests/output
